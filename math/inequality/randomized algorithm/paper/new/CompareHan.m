clear
clc
debug = 0;
%% 产生问题矩阵
m = 2000;
n = 200;
A = 2 * rand(m , n)-1;
b = 2 * rand(m , 1)-1;

x0 = zeros(n , 1);
tol=1e-50-1;
fprintf('%s & %d & %d tol=%g\n','矩阵维数', m, n, tol);
%% 基于IFM的算法找到一个解
maxit_LSQR = 3;
r = b - A * x0;
r(r<0) = 0;
norm_r0 = norm(r);
norm_g0 = norm(A'*r);
fprintf('%s & %g & %g \n','最开始的目标函数和梯度', norm_r0, norm_g0);
% [x_exact, ~, ~, ~, ~] = IFM(A, b, x0,10, maxit_LSQR , 1e-10,[],debug);
% r = b - A * x_exact;
% r(r<0) = 0;
% norm_rexact = norm(r);
% norm_gexact = norm(A'*r);
% fprintf('%s & %g & %g \n','IFM解的目标函数值和梯度  ', norm_rexact, norm_gexact);
 x_exact=[];
%% 参数的设定
maxit_Han = 50;
z0=zeros(m,1);
t=clock;
[x_Han,r_Han,countFM_Han,error_Han,beginNW_Han,tf_Han,vk_Han,rkArr_Han]=han(x0,A,b,maxit_Han,1e-11,x_exact,debug);
tf_PC=etime(clock,t);
r = b - A * x_Han;
r(r<0) = 0;
r_PC = norm(r);
g_PC = norm(A'*r);
fprintf('& %s & %g & %g & %d & %g \\\\\n','Han', r_PC, g_PC,countFM_Han,tf_PC);

%% GuassSeidel
maxit_Rand =5000;
t=clock;
 [x_GS,iter_GS,error_GS,xA_GS,index_GS] = GuassSeidelNE(A, b, x0,2.0,maxit_Rand*2,tol,x_exact,debug);
tf_GS=etime(clock,t);
r = b - A * x_GS;
r(r<0) = 0;
r_GS = norm(r);
g_GS = norm(A'*r);
fprintf('& %s & %g & %g & %d & %g \\\\\n', 'CCD', r_GS, g_GS, iter_GS, tf_GS);


%% simpleGuassSeidel
% maxit_Rand =1000000;
t=clock;
[x_GS,iter_SGS,error_SGS,xA_GS,index_GS] = simpleGuassSeidelNE(A, b, x0,2.0,maxit_Rand*5,tol,x_exact,debug);
tf_GS=etime(clock,t);
r = b - A * x_GS;
r(r<0) = 0;
r_GS = norm(r);
g_GS = norm(A'*r);
fprintf('& %s & %g & %g & %d & %g \\\\\n', 'UCD', r_GS, g_GS, iter_SGS, tf_GS);

%% randGuassSeidel
% maxit_Rand =630000;
t=clock;
[x_GS,iter_RGS,error_RGS,xA_GS,index_GS] = randGuassSeidelNE(A, b, x0,2.0,maxit_Rand*5,tol,x_exact,debug);
tf_GS=etime(clock,t);
r = b - A * x_GS;
r(r<0) = 0;
r_GS = norm(r);
g_GS = norm(A'*r);
fprintf('& %s & %g & %g & %d & %g \\\\\n', 'RCD', r_GS, g_GS, iter_RGS, tf_GS);
% clear
% clc
% load("data_han")
% figure (1)
% semilogy(1:countFM_Han,error_Han(1:countFM_Han),'k--');
% title('比较坐标下降算法和Han算法的性能')
% ylabel('梯度的范数') 
% xlabel('迭代次数（对于坐标下降法，每n次迭代算一次迭代）') 
% hold on
% iters=250;
% semilogy(1:iters,error_GS(1:iters),'b--');
% semilogy(1:iters,error_SGS(1:iters),'r--');
% semilogy(1:iters,error_RGS(1:iters),'g--');
% 
% % semilogy(1:size(error_GS,2),error_GS,'b--');
% % semilogy(1:size(error_SGS,2),error_SGS,'r--');
% % semilogy(1:size(error_RGS,2),error_RGS,'g--');
% hold off
% legend('Han','CCD','UCD','RCD')

% 矩阵维数 & 5000 & 1000 tol=-1
% 最开始的目标函数和梯度 & 28.9627 & 523.841 
% & Han & 22.3306 & 7.61694e-13 & 7 & 52.975 \\
% & CCD & 22.3306 & 1.35664e-10 & 1000000 & 30.099 \\
% & UCD & 22.3306 & 9.47045e-11 & 1000000 & 31.492 \\
% & RCD & 22.3306 & 9.28481e-11 & 1000000 & 35.044 \\


% 矩阵维数 & 100 & 10 tol=-1
% 最开始的目标函数和梯度 & 4.41717 & 7.54128 
% & Han & 4.13414 & 1.65513e-15 & 4 & 0.004 \\
% & CCD & 4.13414 & 2.03292e-14 & 1000 & 0.006 \\
% & UCD & 4.13414 & 9.65711e-15 & 1000 & 0.007 \\
% & RCD & 4.13414 & 1.35365e-14 & 1000 & 0.006 \\

% 矩阵维数 & 100 & 10 tol=-1
% 最开始的目标函数和梯度 & 3.38863 & 6.19866 
% & Han & 2.68444 & 1.56025e-15 & 4 & 0.001 \\
% & CCD & 2.68444 & 8.14161e-15 & 1000 & 0.004 \\
% & UCD & 2.68444 & 9.06805e-15 & 1000 & 0.008 \\
% & RCD & 2.68444 & 1.11586e-14 & 1000 & 0.006 \\


% 矩阵维数 & 1000 & 100 tol=-1
% 最开始的目标函数和梯度 & 12.9347 & 86.9921 
% & Han & 11.2493 & 3.74996e-14 & 5 & 0.036 \\
% & CCD & 11.2493 & 2.20507e-13 & 5000 & 0.025 \\
% & UCD & 11.2493 & 5.91191e-12 & 500000 & 2.823 \\
% & RCD & 11.2493 & 3.75268e-12 & 500000 & 2.774 \\

% 矩阵维数 & 2000 & 200 tol=-1
% 最开始的目标函数和梯度 & 18.8048 & 137.426 
% & Han & 17.2419 & 1.17076e-13 & 5 & 0.887 \\
% & CCD & 17.2419 & 2.82847e-10 & 5000 & 0.042 \\
% & UCD & 17.2419 & 1.88437e-11 & 500000 & 4.627 \\
% & RCD & 17.2419 & 1.76419e-11 & 500000 & 4.656 \\

% 矩阵维数 & 5000 & 500 tol=-1
% 最开始的目标函数和梯度 & 29.147 & 368.357 
% & Han & 26.3239 & 4.42193e-13 & 5 & 14.557 \\
% & CCD & 26.3239 & 7.51214e-12 & 50000 & 1.663 \\
% & UCD & 26.3239 & 6.12937e-11 & 500000 & 16.919 \\
% & RCD & 26.3239 & 6.66047e-11 & 500000 & 17.034 \\
% 矩阵维数 & 5000 & 500 tol=-1
% 最开始的目标函数和梯度 & 28.7523 & 371.077 
% & Han & 25.7714 & 4.47019e-13 & 5 & 14.746 \\
% & CCD & 25.7714 & 8.02529e-11 & 500000 & 15.262 \\
% & UCD & 25.7714 & 6.24562e-11 & 500000 & 16.102 \\
% & RCD & 25.7714 & 5.83725e-11 & 500000 & 16.718 \\

% 矩阵维数 & 6000 & 600 tol=-1
% 最开始的目标函数和梯度 & 31.4519 & 449.273 
% & Han & 28.1524 & 5.92686e-13 & 5 & 24.184 \\
% & CCD & 28.1524 & 7.53169e-11 & 500000 & 16.783 \\
% & UCD & 28.1524 & 6.06727e-11 & 500000 & 17.996 \\
% & RCD & 28.1524 & 6.92016e-11 & 500000 & 18.61 \\
% 矩阵维数 & 6000 & 600 tol=-1
% 最开始的目标函数和梯度 & 31.1129 & 431.766 
% & Han & 28.0205 & 5.68699e-13 & 4 & 25.042 \\
% & CCD & 28.0205 & 9.44686e-11 & 500000 & 17.144 \\
% & UCD & 28.0205 & 6.84441e-11 & 500000 & 18.332 \\
% & RCD & 28.0205 & 7.4982e-11 & 500000 & 18.68 \\

% 矩阵维数 & 7000 & 700 tol=-1
% 最开始的目标函数和梯度 & 34.4185 & 525.389 
% & Han & 30.8521 & 7.22964e-13 & 4 & 40.882 \\
% & CCD & 30.8521 & 9.24089e-11 & 500000 & 19.196 \\
% & UCD & 30.8521 & 7.5194e-11 & 500000 & 20.858 \\
% & RCD & 30.8521 & 7.62202e-11 & 500000 & 21.321 \\

% 矩阵维数 & 4000 & 400 tol=-1
% 最开始的目标函数和梯度 & 25.8318 & 319.961 
% & Han & 22.6298 & 3.1107e-13 & 4 & 7.664 \\
% & CCD & 22.6298 & 5.37065e-11 & 500000 & 12.386 \\
% & UCD & 22.6298 & 4.91184e-11 & 500000 & 12.944 \\
% & RCD & 22.6298 & 4.97691e-11 & 500000 & 14.094 \\

% 矩阵维数 & 3000 & 300 tol=-1
% 最开始的目标函数和梯度 & 22.3759 & 214.33 
% & Han & 20.2377 & 2.21253e-13 & 5 & 2.948 \\
% & CCD & 20.2377 & 5.72464e-12 & 50000 & 0.684 \\
% & UCD & 20.2377 & 3.36894e-12 & 50000 & 0.79 \\
% & RCD & 20.2377 & 3.41796e-12 & 50000 & 0.786 \\

% 矩阵维数 & 3000 & 300 tol=-1
% 最开始的目标函数和梯度 & 22.2413 & 232.723 
% & Han & 19.7965 & 2.14168e-13 & 4 & 3.055 \\
% & CCD & 19.7965 & 1.85184e-12 & 20000 & 0.278 \\
% & UCD & 19.7965 & 1.69613e-12 & 30000 & 0.473 \\
% & RCD & 19.7965 & 1.65782e-12 & 30000 & 0.469 \\

% 矩阵维数 & 1000 & 100 tol=-1
% 最开始的目标函数和梯度 & 13.4206 & 79.466 
% & Han & 12.0414 & 4.7214e-14 & 3 & 0.028 \\
% & CCD & 12.0414 & 3.17634e-13 & 6000 & 0.028 \\
% & UCD & 12.0414 & 9.49225e-13 & 9000 & 0.068 \\
% & RCD & 12.0414 & 9.1345e-13 & 9000 & 0.071 \\
% 矩阵维数 & 500 & 50 tol=-1
% 最开始的目标函数和梯度 & 9.51812 & 39.1604 
% & Han & 8.51486 & 1.27659e-14 & 3 & 0.009 \\
% & CCD & 8.51486 & 2.20173e-13 & 4000 & 0.018 \\
% & UCD & 8.51486 & 1.52854e-13 & 6000 & 0.027 \\
% & RCD & 8.51486 & 1.94127e-13 & 6000 & 0.028 \\

% 矩阵维数 & 600 & 60 tol=-1
% 最开始的目标函数和梯度 & 10.1206 & 46.2859 
% & Han & 8.95682 & 2.11326e-14 & 4 & 0.013 \\
% & CCD & 8.95682 & 1.17775e-13 & 3000 & 0.018 \\
% & UCD & 8.95682 & 1.60865e-13 & 6000 & 0.029 \\
% & RCD & 8.95682 & 1.63854e-13 & 6000 & 0.04 \\
% 矩阵维数 & 700 & 70 tol=-1
% 最开始的目标函数和梯度 & 10.8796 & 59.0618 
% & Han & 9.49305 & 2.41002e-14 & 4 & 0.019 \\
% & CCD & 9.49305 & 1.43591e-13 & 3000 & 0.014 \\
% & UCD & 9.49305 & 1.93288e-13 & 7500 & 0.043 \\
% & RCD & 9.49305 & 2.29679e-13 & 7500 & 0.048 \\

% 矩阵维数 & 800 & 80 tol=-1
% 最开始的目标函数和梯度 & 11.5459 & 65.7602 
% & Han & 10.0905 & 3.20264e-14 & 4 & 0.021 \\
% & CCD & 10.0905 & 1.52081e-13 & 3000 & 0.015 \\
% & UCD & 10.0905 & 1.86435e-13 & 7500 & 0.038 \\
% & RCD & 10.0905 & 2.44661e-13 & 7500 & 0.054 \\
% 矩阵维数 & 900 & 90 tol=-1
% 最开始的目标函数和梯度 & 12.5919 & 69.4176 
% & Han & 11.2337 & 4.14615e-14 & 3 & 0.024 \\
% & CCD & 11.2337 & 8.18555e-13 & 4000 & 0.019 \\
% & UCD & 11.2337 & 3.0616e-13 & 10000 & 0.062 \\
% & RCD & 11.2337 & 3.10773e-13 & 10000 & 0.093 \\
% 
% 矩阵维数 & 1000 & 100 tol=-1
% 最开始的目标函数和梯度 & 12.8728 & 76.9065 
% & Han & 11.4432 & 4.22961e-14 & 3 & 0.041 \\
% & CCD & 11.4432 & 8.32252e-13 & 4000 & 0.017 \\
% & UCD & 11.4432 & 3.41542e-13 & 10000 & 0.067 \\
% & RCD & 11.4432 & 2.85195e-13 & 10000 & 0.067 \\

% 矩阵维数 & 2000 & 200 tol=-1
% 最开始的目标函数和梯度 & 18.6312 & 146.486 
% & Han & 16.8605 & 1.07608e-13 & 4 & 0.985 \\
% & CCD & 16.8605 & 8.74076e-13 & 10000 & 0.068 \\
% & UCD & 16.8605 & 1.26759e-12 & 25000 & 0.197 \\
% & RCD & 16.8605 & 1.23355e-12 & 25000 & 0.218 \\
clear
clc
x= [100,500,1000,2000,3000];
y1=[ 0.001 0.009 0.041 0.985 2.948];
y2=[ 0.004 0.018 0.017 0.068 0.278];
y3=[ 0.008 0.027 0.067 0.197 0.473];
y4=[ 0.006 0.028 0.067 0.218 0.469];
figure (1)
semilogy(x,y1,'k--');
title('比较坐标下降算法和Han算法在不同规模下的运行时间')
ylabel('CPU运行时间') 
xlabel('矩阵的行数，列数是行数的0.1倍') 
hold on
iters=250;
semilogy(x,y2,'b--');
semilogy(x,y3,'r--');
semilogy(x,y4,'g--');

hold off
legend('Han','CCD','UCD','RCD')

